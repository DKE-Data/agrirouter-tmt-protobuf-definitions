// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: technicalmessagetype/gps.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Agrirouter.Technicalmessagetype {

  /// <summary>Holder for reflection information generated from technicalmessagetype/gps.proto</summary>
  public static partial class GpsReflection {

    #region Descriptor
    /// <summary>File descriptor for technicalmessagetype/gps.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GpsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch50ZWNobmljYWxtZXNzYWdldHlwZS9ncHMucHJvdG8SH2Fncmlyb3V0ZXIu",
            "dGVjaG5pY2FsbWVzc2FnZXR5cGUaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8i+AUKB0dQU0xp",
            "c3QSQgoHZW50cmllcxgBIAMoCzIxLmFncmlyb3V0ZXIudGVjaG5pY2FsbWVz",
            "c2FnZXR5cGUuR1BTTGlzdC5HUFNFbnRyeRqoBQoIR1BTRW50cnkSFgoOcG9z",
            "aXRpb25fbm9ydGgYASABKAESFQoNcG9zaXRpb25fZWFzdBgCIAEoARITCgtw",
            "b3NpdGlvbl91cBgDIAEoEhJZCg9wb3NpdGlvbl9zdGF0dXMYBCABKA4yQC5h",
            "Z3Jpcm91dGVyLnRlY2huaWNhbG1lc3NhZ2V0eXBlLkdQU0xpc3QuR1BTRW50",
            "cnkuUG9zaXRpb25TdGF0dXMSDAoEcGRvcBgFIAEoARIMCgRoZG9wGAYgASgB",
            "EhwKFG51bWJlcl9vZl9zYXRlbGxpdGVzGAcgASgNEjUKEWdwc191dGNfdGlt",
            "ZXN0YW1wGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJTCgxm",
            "aWVsZF9zdGF0dXMYCSABKA4yPS5hZ3Jpcm91dGVyLnRlY2huaWNhbG1lc3Nh",
            "Z2V0eXBlLkdQU0xpc3QuR1BTRW50cnkuRmllbGRTdGF0dXMSKAoJZXh0ZW5z",
            "aW9uGIAQIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkizgEKDlBvc2l0aW9u",
            "U3RhdHVzEgwKCERfTk9fR1BTEAASCgoGRF9HTlNTEAESCwoHRF9ER05TUxAC",
            "EhIKDkRfUFJFQ0lTRV9HTlNTEAMSEgoORF9SVEtfRklOVEVHRVIQBBIPCgtE",
            "X1JUS19GTE9BVBAFEhEKDURfRVNUX0RSX01PREUQBhISCg5EX01BTlVBTF9J",
            "TlBVVBAHEhMKD0RfU0lNVUxBVEVfTU9ERRAIEgsKB0RfRVJST1IQDhITCg9E",
            "X05PVF9BVkFJTEFCTEUQDyI8CgtGaWVsZFN0YXR1cxIOCgpGU19VTktOT1dO",
            "EAASDgoKRlNfSU5GSUVMRBABEg0KCUZTX1NUUkVFVBACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Agrirouter.Technicalmessagetype.GPSList), global::Agrirouter.Technicalmessagetype.GPSList.Parser, new[]{ "Entries" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry), global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry.Parser, new[]{ "PositionNorth", "PositionEast", "PositionUp", "PositionStatus", "Pdop", "Hdop", "NumberOfSatellites", "GpsUtcTimestamp", "FieldStatus", "Extension" }, null, new[]{ typeof(global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry.Types.PositionStatus), typeof(global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry.Types.FieldStatus) }, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GPSList : pb::IMessage<GPSList> {
    private static readonly pb::MessageParser<GPSList> _parser = new pb::MessageParser<GPSList>(() => new GPSList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GPSList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Agrirouter.Technicalmessagetype.GpsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GPSList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GPSList(GPSList other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GPSList Clone() {
      return new GPSList(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry.Parser);
    private readonly pbc::RepeatedField<global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry> entries_ = new pbc::RepeatedField<global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GPSList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GPSList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GPSList other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GPSList message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class GPSEntry : pb::IMessage<GPSEntry> {
        private static readonly pb::MessageParser<GPSEntry> _parser = new pb::MessageParser<GPSEntry>(() => new GPSEntry());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GPSEntry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Agrirouter.Technicalmessagetype.GPSList.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GPSEntry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GPSEntry(GPSEntry other) : this() {
          positionNorth_ = other.positionNorth_;
          positionEast_ = other.positionEast_;
          positionUp_ = other.positionUp_;
          positionStatus_ = other.positionStatus_;
          pdop_ = other.pdop_;
          hdop_ = other.hdop_;
          numberOfSatellites_ = other.numberOfSatellites_;
          gpsUtcTimestamp_ = other.gpsUtcTimestamp_ != null ? other.gpsUtcTimestamp_.Clone() : null;
          fieldStatus_ = other.fieldStatus_;
          extension_ = other.extension_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GPSEntry Clone() {
          return new GPSEntry(this);
        }

        /// <summary>Field number for the "position_north" field.</summary>
        public const int PositionNorthFieldNumber = 1;
        private double positionNorth_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double PositionNorth {
          get { return positionNorth_; }
          set {
            positionNorth_ = value;
          }
        }

        /// <summary>Field number for the "position_east" field.</summary>
        public const int PositionEastFieldNumber = 2;
        private double positionEast_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double PositionEast {
          get { return positionEast_; }
          set {
            positionEast_ = value;
          }
        }

        /// <summary>Field number for the "position_up" field.</summary>
        public const int PositionUpFieldNumber = 3;
        private long positionUp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PositionUp {
          get { return positionUp_; }
          set {
            positionUp_ = value;
          }
        }

        /// <summary>Field number for the "position_status" field.</summary>
        public const int PositionStatusFieldNumber = 4;
        private global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry.Types.PositionStatus positionStatus_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry.Types.PositionStatus PositionStatus {
          get { return positionStatus_; }
          set {
            positionStatus_ = value;
          }
        }

        /// <summary>Field number for the "pdop" field.</summary>
        public const int PdopFieldNumber = 5;
        private double pdop_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Pdop {
          get { return pdop_; }
          set {
            pdop_ = value;
          }
        }

        /// <summary>Field number for the "hdop" field.</summary>
        public const int HdopFieldNumber = 6;
        private double hdop_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Hdop {
          get { return hdop_; }
          set {
            hdop_ = value;
          }
        }

        /// <summary>Field number for the "number_of_satellites" field.</summary>
        public const int NumberOfSatellitesFieldNumber = 7;
        private uint numberOfSatellites_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint NumberOfSatellites {
          get { return numberOfSatellites_; }
          set {
            numberOfSatellites_ = value;
          }
        }

        /// <summary>Field number for the "gps_utc_timestamp" field.</summary>
        public const int GpsUtcTimestampFieldNumber = 8;
        private global::Google.Protobuf.WellKnownTypes.Timestamp gpsUtcTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp GpsUtcTimestamp {
          get { return gpsUtcTimestamp_; }
          set {
            gpsUtcTimestamp_ = value;
          }
        }

        /// <summary>Field number for the "field_status" field.</summary>
        public const int FieldStatusFieldNumber = 9;
        private global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry.Types.FieldStatus fieldStatus_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry.Types.FieldStatus FieldStatus {
          get { return fieldStatus_; }
          set {
            fieldStatus_ = value;
          }
        }

        /// <summary>Field number for the "extension" field.</summary>
        public const int ExtensionFieldNumber = 2048;
        private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_extension_codec
            = pb::FieldCodec.ForMessage(16386, global::Google.Protobuf.WellKnownTypes.Any.Parser);
        private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> extension_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
        /// <summary>
        /// Used for proprietary purposes
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Extension {
          get { return extension_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GPSEntry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GPSEntry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PositionNorth, other.PositionNorth)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PositionEast, other.PositionEast)) return false;
          if (PositionUp != other.PositionUp) return false;
          if (PositionStatus != other.PositionStatus) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Pdop, other.Pdop)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Hdop, other.Hdop)) return false;
          if (NumberOfSatellites != other.NumberOfSatellites) return false;
          if (!object.Equals(GpsUtcTimestamp, other.GpsUtcTimestamp)) return false;
          if (FieldStatus != other.FieldStatus) return false;
          if(!extension_.Equals(other.extension_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PositionNorth != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PositionNorth);
          if (PositionEast != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PositionEast);
          if (PositionUp != 0L) hash ^= PositionUp.GetHashCode();
          if (PositionStatus != 0) hash ^= PositionStatus.GetHashCode();
          if (Pdop != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Pdop);
          if (Hdop != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Hdop);
          if (NumberOfSatellites != 0) hash ^= NumberOfSatellites.GetHashCode();
          if (gpsUtcTimestamp_ != null) hash ^= GpsUtcTimestamp.GetHashCode();
          if (FieldStatus != 0) hash ^= FieldStatus.GetHashCode();
          hash ^= extension_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (PositionNorth != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(PositionNorth);
          }
          if (PositionEast != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(PositionEast);
          }
          if (PositionUp != 0L) {
            output.WriteRawTag(24);
            output.WriteSInt64(PositionUp);
          }
          if (PositionStatus != 0) {
            output.WriteRawTag(32);
            output.WriteEnum((int) PositionStatus);
          }
          if (Pdop != 0D) {
            output.WriteRawTag(41);
            output.WriteDouble(Pdop);
          }
          if (Hdop != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(Hdop);
          }
          if (NumberOfSatellites != 0) {
            output.WriteRawTag(56);
            output.WriteUInt32(NumberOfSatellites);
          }
          if (gpsUtcTimestamp_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(GpsUtcTimestamp);
          }
          if (FieldStatus != 0) {
            output.WriteRawTag(72);
            output.WriteEnum((int) FieldStatus);
          }
          extension_.WriteTo(output, _repeated_extension_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PositionNorth != 0D) {
            size += 1 + 8;
          }
          if (PositionEast != 0D) {
            size += 1 + 8;
          }
          if (PositionUp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeSInt64Size(PositionUp);
          }
          if (PositionStatus != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PositionStatus);
          }
          if (Pdop != 0D) {
            size += 1 + 8;
          }
          if (Hdop != 0D) {
            size += 1 + 8;
          }
          if (NumberOfSatellites != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumberOfSatellites);
          }
          if (gpsUtcTimestamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsUtcTimestamp);
          }
          if (FieldStatus != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FieldStatus);
          }
          size += extension_.CalculateSize(_repeated_extension_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GPSEntry other) {
          if (other == null) {
            return;
          }
          if (other.PositionNorth != 0D) {
            PositionNorth = other.PositionNorth;
          }
          if (other.PositionEast != 0D) {
            PositionEast = other.PositionEast;
          }
          if (other.PositionUp != 0L) {
            PositionUp = other.PositionUp;
          }
          if (other.PositionStatus != 0) {
            PositionStatus = other.PositionStatus;
          }
          if (other.Pdop != 0D) {
            Pdop = other.Pdop;
          }
          if (other.Hdop != 0D) {
            Hdop = other.Hdop;
          }
          if (other.NumberOfSatellites != 0) {
            NumberOfSatellites = other.NumberOfSatellites;
          }
          if (other.gpsUtcTimestamp_ != null) {
            if (gpsUtcTimestamp_ == null) {
              gpsUtcTimestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            GpsUtcTimestamp.MergeFrom(other.GpsUtcTimestamp);
          }
          if (other.FieldStatus != 0) {
            FieldStatus = other.FieldStatus;
          }
          extension_.Add(other.extension_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                PositionNorth = input.ReadDouble();
                break;
              }
              case 17: {
                PositionEast = input.ReadDouble();
                break;
              }
              case 24: {
                PositionUp = input.ReadSInt64();
                break;
              }
              case 32: {
                positionStatus_ = (global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry.Types.PositionStatus) input.ReadEnum();
                break;
              }
              case 41: {
                Pdop = input.ReadDouble();
                break;
              }
              case 49: {
                Hdop = input.ReadDouble();
                break;
              }
              case 56: {
                NumberOfSatellites = input.ReadUInt32();
                break;
              }
              case 66: {
                if (gpsUtcTimestamp_ == null) {
                  gpsUtcTimestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(gpsUtcTimestamp_);
                break;
              }
              case 72: {
                fieldStatus_ = (global::Agrirouter.Technicalmessagetype.GPSList.Types.GPSEntry.Types.FieldStatus) input.ReadEnum();
                break;
              }
              case 16386: {
                extension_.AddEntriesFrom(input, _repeated_extension_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the GPSEntry message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PositionStatus {
            [pbr::OriginalName("D_NO_GPS")] DNoGps = 0,
            [pbr::OriginalName("D_GNSS")] DGnss = 1,
            [pbr::OriginalName("D_DGNSS")] DDgnss = 2,
            [pbr::OriginalName("D_PRECISE_GNSS")] DPreciseGnss = 3,
            [pbr::OriginalName("D_RTK_FINTEGER")] DRtkFinteger = 4,
            [pbr::OriginalName("D_RTK_FLOAT")] DRtkFloat = 5,
            [pbr::OriginalName("D_EST_DR_MODE")] DEstDrMode = 6,
            [pbr::OriginalName("D_MANUAL_INPUT")] DManualInput = 7,
            [pbr::OriginalName("D_SIMULATE_MODE")] DSimulateMode = 8,
            /// <summary>
            /// 9-13 Reserved
            /// </summary>
            [pbr::OriginalName("D_ERROR")] DError = 14,
            [pbr::OriginalName("D_NOT_AVAILABLE")] DNotAvailable = 15,
          }

          public enum FieldStatus {
            [pbr::OriginalName("FS_UNKNOWN")] FsUnknown = 0,
            [pbr::OriginalName("FS_INFIELD")] FsInfield = 1,
            [pbr::OriginalName("FS_STREET")] FsStreet = 2,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
